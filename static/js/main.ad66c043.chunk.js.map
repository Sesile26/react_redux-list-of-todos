{"version":3,"sources":["store/actions.ts","store/index.ts","api.ts","store/selectors.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","SET_STATUS_VALUE","SET_TITLE_VALUE","loadTodosActions","payload","type","loadUserAction","initialState","todos","user","title","status","store","createStore","state","action","apiUrl","getData","url","a","fetch","responce","json","getUser","userId","getTodosSelector","getUserSelector","getTitleValue","getStatusValue","TodoList","dispatch","useDispatch","useSelector","handleSelectUser","id","getUserFromServer","filterTodos","todosCopy","filter","todo","toLowerCase","includes","completed","filteredTodos","useEffect","loadTodosFromServer","todosFromServer","className","htmlFor","value","onChange","event","target","placeholder","map","classnames","checked","readOnly","onClick","todoId","CurrentUser","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"wPAAaA,EAAa,QACbC,EAAY,OACZC,EAAmB,SACnBC,EAAkB,QAElBC,EAAmB,SAACC,GAAD,MAAsB,CACpDC,KAAMN,EACNK,YAGWE,EAAiB,SAACF,GAAD,MAA2B,CACvDC,KAAML,EACNI,YCHIG,EAAsB,CAC1BC,MAAO,GACPC,KAAM,KACNC,MAAO,GACPC,OAAQ,IA+BJC,EAAQC,aA3BE,WAA8C,IAA7CC,EAA4C,uDAApCP,EAAcQ,EAAsB,uCAC3D,OAAQA,EAAOV,MACb,KAAKN,EACH,OAAO,2BACFe,GADL,IAEEN,MAAM,YAAKO,EAAOX,WAEtB,KAAKJ,EACH,OAAO,2BACFc,GADL,IAEEL,KAAMM,EAAOX,UAEjB,KAAKF,EACH,OAAO,2BACFY,GADL,IAEEJ,MAAOK,EAAOX,UAElB,KAAKH,EACH,OAAO,2BACFa,GADL,IAEEH,OAAQI,EAAOX,UAEnB,QACE,OAAOU,MAMEF,I,+CC9CTI,EAAS,qC,SAEAC,E,8EAAf,WAAuBC,GAAvB,eAAAC,EAAA,sEACyBC,MAAMJ,EAASE,GADxC,cACQG,EADR,yBAGSA,EAASC,QAHlB,4C,sBAMO,IAEMC,EAAU,SAACC,GAAD,OAAmCP,EAAQ,SAAD,OAAUO,KCV9DC,EAAmB,SAACX,GAAD,OAAkBA,EAAMN,OAC3CkB,EAAkB,SAACZ,GAAD,OAAkBA,EAAML,MAC1CkB,EAAgB,SAACb,GAAD,OAAkBA,EAAMJ,OACxCkB,EAAiB,SAACd,GAAD,OAAkBA,EAAMH,Q,eCezCkB,EAAqB,WAChC,IAAMC,EAAWC,cAEXvB,EAAQwB,YAAYP,GACpBf,EAAQsB,YAAYL,GACpBhB,EAASqB,YAAYJ,GACrBnB,EAAOuB,YAAYN,GAEnBO,EAAgB,uCAAG,WAAOT,GAAP,eAAAL,EAAA,0DACf,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,MAAOV,EADM,gCAEWD,EAAQC,GAFnB,OAEfW,EAFe,OAIrBL,EAASxB,EAAe6B,IAJH,2CAAH,sDAsChBC,EAtBgB,WACpB,IAAIC,EAAS,YAAO7B,GAMpB,OAJIE,IACF2B,EAAYA,EAAUC,QAAO,SAAAC,GAAI,OAAIA,EAAK7B,MAAM8B,cAAcC,SAAS/B,EAAM8B,mBAGvE7B,GACN,IAAK,SACH0B,EAAY7B,EAAM8B,QAAO,SAAAC,GAAI,OAAKA,EAAKG,aACvC,MACF,IAAK,YACHL,EAAY7B,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAKG,aACtC,MAEF,QACE,OAAOL,EAGX,OAAOA,EAGWM,GAEpBC,qBAAU,WACR,IAAMC,EAAmB,uCAAG,4BAAA1B,EAAA,sEF3DeF,EAAQ,SE2DvB,OACpB6B,EADoB,OAG1BhB,EAAS3B,EAAiB2C,IAHA,2CAAH,qDAMzBD,MACC,IAMH,OACE,sBAAKE,UAAU,WAAf,UACE,wCAEA,uBAAOC,QAAQ,QAAf,SACE,uBACE3C,KAAK,OACL6B,GAAG,QACHe,MAAOvC,EACPwC,SAvDY,SAACC,GJdM,IAAC/C,EIe1B0B,GJf0B1B,EIeH+C,EAAMC,OAAOH,MJfW,CACjD5C,KAAMH,EACNE,cIoEQ2C,UAAU,8BACVM,YAAY,oBAIhB,qBAAKN,UAAU,mCAAf,SACE,yBACEE,MAAOtC,EACPuC,SA5Da,SAACC,GJvBM,IAAC/C,EIwB3B0B,GJxB2B1B,EIwBH+C,EAAMC,OAAOH,MJxBW,CAClD5C,KAAMJ,EACNG,cI+EM,UAIE,wBAAQ6C,MAAM,GAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,yBAIJ,qBAAKF,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGX,EAAYkB,KAAI,SAAAf,GAAI,OACnB,qBAEEQ,UAAWQ,IACT,iBACA,CAAE,0BAA2BhB,EAAKG,WAClC,CAAE,6BAA8BH,EAAKG,YALzC,UAQE,wBAAOM,QAAO,mBAAcT,EAAKL,IAAjC,UACE,uBACE7B,KAAK,WACL6B,GAAE,mBAAcK,EAAKL,IACrBsB,QAASjB,EAAKG,UACde,UAAQ,IAEV,4BAAIlB,EAAK7B,WAGX,sBAAKqC,UAAU,iBAAf,UACE,wBACE1C,KAAK,SACL0C,UAAU,iEAKVW,QAAS,WA3DN,IAACC,IA4DSpB,EAAKL,GA3DhCJ,EAAS3B,EAAiBK,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAKL,KAAOyB,QAmD/C,oBAcA,yBACEtD,KAAK,SACL0C,UAAU,iEAKVW,QAAS,WACPzB,EAAiBM,EAAKf,SAR1B,sBAYGe,EAAKf,eA5CLe,EAAKL,eCzGX0B,G,MAAwB,WACnC,IAAM9B,EAAWC,cAEXtB,EAAOuB,YAAYN,GAMzB,OACE,sBAAKqB,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SAAmC,+DAAyBtC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMyB,QAElE,oBAAIa,UAAU,oBAAd,gBAAmCtC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMoD,OACzC,mBAAGd,UAAU,qBAAb,gBAAmCtC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMqD,QACzC,mBAAGf,UAAU,qBAAb,gBAAmCtC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMsD,QAEzC,wBACE1D,KAAK,SACLqD,QAdmB,WACvB5B,EAASxB,EAAe,QAcpByC,UAAU,6BAHZ,wBCISiB,EAnBO,WACpB,IAAMvD,EAAOuB,YAAYN,GAEzB,OACE,sBAAKqB,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACGtC,EACC,cAAC,EAAD,IACE,2BCTRwD,EAAO,kBACX,cAAC,IAAD,CAAUrD,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNsD,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.ad66c043.chunk.js","sourcesContent":["export const LOAD_TODOS = 'TODOS';\nexport const LOAD_USER = 'USER';\nexport const SET_STATUS_VALUE = 'STATUS';\nexport const SET_TITLE_VALUE = 'TITLE';\n\nexport const loadTodosActions = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User | null) => ({\n  type: LOAD_USER,\n  payload,\n});\n\nexport const setStatusValue = (payload: string) => ({\n  type: SET_STATUS_VALUE,\n  payload,\n});\n\nexport const setTitleValue = (payload: string) => ({\n  type: SET_TITLE_VALUE,\n  payload,\n});\n","import { createStore, AnyAction } from 'redux';\nimport {\n  SET_STATUS_VALUE,\n  SET_TITLE_VALUE,\n  LOAD_TODOS,\n  LOAD_USER,\n} from './actions';\n\n// Initial state\nconst initialState: State = {\n  todos: [],\n  user: null,\n  title: '',\n  status: '',\n};\n\n// rootReducer - this function is called after dispatching an action\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case SET_TITLE_VALUE:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case SET_STATUS_VALUE:\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n","const apiUrl = 'https://mate.academy/students-api/';\n\nasync function getData(url: string) {\n  const responce = await fetch(apiUrl + url);\n\n  return responce.json();\n}\n\nexport const getTodos = (): Promise<Todo[]> => getData('todos');\n\nexport const getUser = (userId: number): Promise<User> => getData(`users/${userId}`);\n","export const getTodosSelector = (state: State) => state.todos;\nexport const getUserSelector = (state: State) => state.user;\nexport const getTitleValue = (state: State) => state.title;\nexport const getStatusValue = (state: State) => state.status;\n","import classnames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodos, getUser } from '../../api';\nimport {\n  loadTodosActions,\n  loadUserAction,\n  setStatusValue,\n  setTitleValue,\n} from '../../store/actions';\nimport {\n  getStatusValue,\n  getTitleValue,\n  getTodosSelector,\n  getUserSelector,\n} from '../../store/selectors';\nimport './TodoList.scss';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const todos = useSelector(getTodosSelector);\n  const title = useSelector(getTitleValue);\n  const status = useSelector(getStatusValue);\n  const user = useSelector(getUserSelector);\n\n  const handleSelectUser = async (userId: number) => {\n    if (user?.id !== userId) {\n      const getUserFromServer = await getUser(userId);\n\n      dispatch(loadUserAction(getUserFromServer));\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setTitleValue(event.target.value));\n  };\n\n  const handleStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setStatusValue(event.target.value));\n  };\n\n  const filteredTodos = () => {\n    let todosCopy = [...todos];\n\n    if (title) {\n      todosCopy = todosCopy.filter(todo => todo.title.toLowerCase().includes(title.toLowerCase()));\n    }\n\n    switch (status) {\n      case 'active':\n        todosCopy = todos.filter(todo => !todo.completed);\n        break;\n      case 'complited':\n        todosCopy = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        return todosCopy;\n    }\n\n    return todosCopy;\n  };\n\n  const filterTodos = filteredTodos();\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosActions(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const delateTodo = (todoId: number) => {\n    dispatch(loadTodosActions(todos.filter(todo => todo.id !== todoId)));\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <label htmlFor=\"title\">\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={handleTitle}\n          className=\"input TodoList__findByTitle\"\n          placeholder=\"Find by title\"\n        />\n      </label>\n\n      <div className=\"select TodoList__findByComplited\">\n        <select\n          value={status}\n          onChange={handleStatus}\n        >\n          <option value=\"\">All</option>\n          <option value=\"complited\">Complited</option>\n          <option value=\"active\">Active</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filterTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classnames(\n                'TodoList__item',\n                { 'TodoList__item--checked': todo.completed },\n                { 'TodoList__item--unchecked': !todo.completed },\n              )}\n            >\n              <label htmlFor={`checkbox-${todo.id}`}>\n                <input\n                  type=\"checkbox\"\n                  id={`checkbox-${todo.id}`}\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <div className=\"TodoList__flex\">\n                <button\n                  type=\"button\"\n                  className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n                \"\n                  onClick={() => {\n                    delateTodo(todo.id);\n                  }}\n                >\n                  Delate\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n                \"\n                  onClick={() => {\n                    handleSelectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserAction } from '../../store/actions';\nimport { getUserSelector } from '../../store/selectors';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserSelector);\n\n  const cancelSelectUser = () => {\n    dispatch(loadUserAction(null));\n  };\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n      <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n\n      <button\n        type=\"button\"\n        onClick={cancelSelectUser}\n        className=\"CurrentUser__button button\"\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\nimport { getUserSelector } from './store/selectors';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const user = useSelector(getUserSelector);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {user ? (\n            <CurrentUser />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}